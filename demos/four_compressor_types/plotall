#!/usr/bin/env python3

import pathlib
import argparse
import numpy as np
import matplotlib.pyplot as plt

plot_params = {
    # 'font.family': 'Latin Modern Math',
    'font.size': 13,
    'axes.grid': True,
    'lines.linewidth': 1.8,
    'grid.linewidth': 0.35,
    'grid.color': 'lightgray',
    'legend.loc': 'upper right',
    'legend.fancybox': True,
    'legend.framealpha' : 0.8,
    'legend.edgecolor': 'gray',
    'legend.fontsize': 10,
    'figure.dpi': 300
}

def parse_arguments():
    parser = argparse.ArgumentParser(description="Process all CSV files to produce one unified plot.")
    parser.add_argument('-O','--out-dir', default=pathlib.Path.cwd(), type=pathlib.Path)
    parser.add_argument('--compressor-types', default=["fcav", "fcam", "fpam", "fpav"], nargs='+')
    return parser.parse_args()

args = parse_arguments()
data = {}
compressor_types = args.compressor_types

print("Agglomerating plots for all compressors...")
for compr in compressor_types:
  data[compr] = {}
  print("Reading CSV files [results_pH_"+compr+"_*]")
  data[compr]['pipe0'] = np.loadtxt(args.out_dir / ('results_pH_'+compr+'_pipe0.csv'),skiprows=1)
  data[compr]['pipe1'] = np.loadtxt(args.out_dir / ('results_pH_'+compr+'_pipe1.csv'),skiprows=1)

plt.rcParams.update(plot_params)
fig, axs = plt.subplots(nrows=2, ncols=4, figsize=(18,9))

# Pressure plots

# Row 0, Col 0
axs[0,0].plot(data['fcav']['pipe0'][:,0], data['fcav']['pipe0'][:,1], linestyle='-', color='green')

colors = ['red', 'blue', 'purple', 'gray', 'black']

for compr, color in zip(compressor_types, colors):
    # Row 0, Col 1
    axs[0,1].plot(data[compr]['pipe0'][:,0], data[compr]['pipe0'][:,2], linestyle='-', color=color, label=compr)

    # Row 0, Col 2
    axs[0,2].plot(data[compr]['pipe1'][:,0], data[compr]['pipe1'][:,1], linestyle='-', color=color, label=compr)

    # Row 0, Col 3
    axs[0,3].plot(data[compr]['pipe1'][:,0], data[compr]['pipe1'][:,2], linestyle='-', color=color, label=compr)

    # Row 1, Col 0
    axs[1,0].plot(data[compr]['pipe0'][:,0], data[compr]['pipe0'][:,3], linestyle='-', color=color, label=compr)

    # Row 1, Col 1
    axs[1,1].plot(data[compr]['pipe0'][:,0], data[compr]['pipe0'][:,4], linestyle='-', color=color, label=compr)

    # Row 1, Col 2
    axs[1,2].plot(data[compr]['pipe1'][:,0], data[compr]['pipe1'][:,3], linestyle='-', color=color, label=compr)

# Row 1, Col 3
axs[1,3].plot(data['fcav']['pipe1'][:,0], data['fcav']['pipe1'][:,4], linestyle='-', color='green', label='input')

# Set Time limits
for i in range(2):
  for j in range(4):
    axs[i,j].set_xlim(0,24)

# Set Pressure and Massflux limits
for j in range(4):
  axs[0,j].set_ylim(65,95)
  axs[1,j].set_ylim(300,600)

# Set y tick labels off on in-between plots
for i in range(2):
  for j in [1,2]:
    plt.setp(axs[i,j].get_yticklabels(), visible=False)

# Set y ticks on right side plots
for i in range(2):
    axs[i,3].yaxis.tick_right()
    axs[i,3].yaxis.set_label_position("right")

# Set X labels on bottom plots
for j in range(4):
  axs[1,j].set_xlabel('Time [h]')

# Set Y labels on left plots
axs[0,0].set_ylabel('Pressure [bar]')
axs[1,0].set_ylabel('Massflux [kg/m^2/s]')

# Legend
handles, labels = axs[1,2].get_legend_handles_labels()
input_handle, input_label = axs[1,3].get_legend_handles_labels()
fig.legend(handles+input_handle, labels+input_label, ncols=6, loc=(0.5, 0.5))

outfile = args.out_dir / "results_four_compressor_types.pdf"
plt.savefig(outfile, bbox_inches='tight')
print(f"Agglomerated plot saved as [{outfile}]")
